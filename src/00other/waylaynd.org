- https://github.com/mpsq/arewewaylandyet
- https://drewdevault.com/2019/02/10/Wayland-misconceptions-debunked.html
- https://wiki.archlinux.org/title/wayland
- https://github.com/natpen/awesome-wayland
- https://github.com/swaywm/sway/wiki/i3-Migration-Guide#common-x11-apps-used-on-i3-with-wayland-alternatives
- https://www.fosskers.ca/en/blog/wayland

## GBM vs EGL Streams

- NVIDIA 495.44 Linux Driver Released With GBM Support https://www.phoronix.com/scan.php?page=news_item&px=NVIDIA-495.44-Linux-Driver

Next was they did not like the GBM model where every process has its own memory pool. But the per process memory pool is important so compositor can restart. The key feature that Nvidia did not like about GBM turns out to be key. KDE developers are wanting to be able to on the fly restart the wayland compositor they will be needing GBM feature of memory per process not memory in a global pool as EGLStreams has.

Yes the Nvidia developer putting support for EGLStreams into KDE end up in a rock and hard place between the KDE lead developer and what he could do with EGLStreams. Yes the KDE lead developer did a demo restarting the wayland compositor on intel and amd and arm and qualcom and broadcom GPUs and it works then the Nvidia developer was completely and totally screwed when the KDE lead developer asked the Nvidia lead developer to show how because this would be a future KDE feature. Every route the Nvidia developer tried with KDE lead back the the memory issue where restarting the compositor lead applications segfaulting that required him to go to the Nvidia driver developer team and ask if they could fix EGLStreams to make this work. This leads to the 470.xx Nvidia driver work with GBM support and DMA BUF support as the Nvidia DGPU drivers developers find they are totally screws EGLStreams simply is not going to work.

https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277113-nvidia-confirms-sway-wayland-compositor-works-fine-with-their-new-gbm-driver-support?p=1277249#post1277249

## Tearing and gaming

In the mean time, Wayland needs to implement tearing to be truly reliable for competitive gaming.

- https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277113-nvidia-confirms-sway-wayland-compositor-works-fine-with-their-new-gbm-driver-support?p=1277279#post1277279
- https://gitlab.freedesktop.org/wayland/wayland-protocols/-/merge_requests/65

## Remaining features

It will still be utterly incomplete if they don't implement
-Vulkan mailbox present mode (everything seems to be forced into fifo mode...)
-is VRR property even implemented for Nvidia DRM modesetting driver?
-is any kind of GPU gamma ramps support implemented for Nvidia DRM modesetting driver?
-there don't seem to be any overclock options on Nvidia Wayland (xorg rootless also doesn't work, WTF, and even then there is no real undervolting possible)
-Nvidia DRM modesetting driver doesn't seem to offer any kind of custom EDID interface
-Does manual fan control work on Wayland?

https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277113-nvidia-confirms-sway-wayland-compositor-works-fine-with-their-new-gbm-driver-support?p=1277129#post1277129

## Fractional scalling

binarybanana

Wow, even Qt lost the ability to do proper fractional scaling on Wayland! I know GTK never supported it, but that's a major regression. Apparently you can't even do the DPI pint-size trick any more on Wayland? According to a visually impaired user.

oiaohm

The DPI point-size trick in fact breaks a lot of applications as well. Really how to properly scale applications has not been a solved problem. We do really need to solve it finally. Remember the fun that application can use absolute positions based on a particular font size render. Fun issue here how to upscale the application while keeping font quality up without running over absolute positions. This is really going to take a toolkit change and has always need a toolkit change.

There is a fun little problem with DPI is that it measures vertical height of the font. The width spacing of the font can increase at a greater rate than the height.

https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277036-kde-s-plasma-wayland-session-is-finally-reaching-stability-following-many-fixes?p=1277186#post1277186

## color profiles

And another showstopper for me is that colord/icc profiles aren't supported on wayland yet

https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277036-kde-s-plasma-wayland-session-is-finally-reaching-stability-following-many-fixes?p=1277064#post1277064

## KDE

- https://community.kde.org/Plasma/Wayland_Showstoppers

## KDE and dual-screen

Mr.Elendig

Still broken with dual-screen. Loses window/panel position etc after screen blank, suspend etc :/

ngraham

Indeed, it's a known bug we are going to look into soon. A huge constellation of issues are inter-related and we are coming to understand the root causes. Basically plasmashell identifies displays by a fragile identifier (the physical connector used) which can be volatile due to other bugs elsewhere in the stack. It's not *quite* as simple as "identify displays by serial number" but doing so may help a lot. Other improvements are planned too. Hopefully this work will make it into Plasma 5.24.

https://www.phoronix.com/forums/forum/phoronix/latest-phoronix-articles/1277036-kde-s-plasma-wayland-session-is-finally-reaching-stability-following-many-fixes?p=1277071#post1277071

## KDE and monitor standby crash

- Session crashes when monitor goes into standby https://bugs.kde.org/show_bug.cgi?id=420160

## Zoom

Zoom-in-the-browser (surprisingly) supports screen sharing on Wayland/Sway.

https://news.ycombinator.com/item?id=28798050

## Vivarium and River (written in zig language)

I wrote [Vivarium](
- [0] https://github.com/inclement/vivarium) specifically to be a wayland compositor that behaves exactly like my (fairly simple) xmonad config, but it's a relatively new/unstable compositor and nothing like xmonad internally.

[River](https://github.com/ifreund/river) has a fantastic tiling model via user-provided executables, which makes it very flexible and probably a good fit for many people wanting something xmonad-like.

- A wlroots and dwl based tiling wayland compositor based around creating layoutshttps://github.com/werererer/japokwm
  - https://github.com/djpohly/dwl
- https://news.ycombinator.com/item?id=28796959
